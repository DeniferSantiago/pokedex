[{"D:\\Test\\Pokedex\\pokedex\\src\\index.js":"1","D:\\Test\\Pokedex\\pokedex\\src\\App.js":"2","D:\\Test\\Pokedex\\pokedex\\src\\Pages\\Home.js":"3","D:\\Test\\Pokedex\\pokedex\\src\\Helpers\\Theme.js":"4","D:\\Test\\Pokedex\\pokedex\\src\\store.js":"5","D:\\Test\\Pokedex\\pokedex\\src\\aws-exports.js":"6","D:\\Test\\Pokedex\\pokedex\\src\\Components\\PrivateRouter.js":"7","D:\\Test\\Pokedex\\pokedex\\src\\Pages\\Dashboard.js":"8","D:\\Test\\Pokedex\\pokedex\\src\\Pages\\SignUp.js":"9","D:\\Test\\Pokedex\\pokedex\\src\\Pages\\Login.js":"10","D:\\Test\\Pokedex\\pokedex\\src\\Reducers\\index.js":"11","D:\\Test\\Pokedex\\pokedex\\src\\Reducers\\UserReducer.js":"12","D:\\Test\\Pokedex\\pokedex\\src\\Actions\\ActionsTypes.js":"13","D:\\Test\\Pokedex\\pokedex\\src\\Helpers\\Validator.js":"14","D:\\Test\\Pokedex\\pokedex\\src\\Pages\\Confirm.js":"15","D:\\Test\\Pokedex\\pokedex\\src\\Components\\Copyright.js":"16","D:\\Test\\Pokedex\\pokedex\\src\\Actions\\UserActions.js":"17","D:\\Test\\Pokedex\\pokedex\\src\\Helpers\\AlertContext.js":"18","D:\\Test\\Pokedex\\pokedex\\src\\Components\\Alerts.js":"19","D:\\Test\\Pokedex\\pokedex\\src\\Middlewares\\UserSesionStorage.js":"20","D:\\Test\\Pokedex\\pokedex\\src\\Helpers\\lsKeys.js":"21","D:\\Test\\Pokedex\\pokedex\\src\\Components\\PublicRouter.js":"22","D:\\Test\\Pokedex\\pokedex\\src\\Services\\Pokedex.js":"23","D:\\Test\\Pokedex\\pokedex\\src\\Pages\\Pokemon.js":"24","D:\\Test\\Pokedex\\pokedex\\src\\Components\\PokemonInfo.js":"25","D:\\Test\\Pokedex\\pokedex\\src\\Components\\Photos.js":"26","D:\\Test\\Pokedex\\pokedex\\src\\Reducers\\FavoriteReducer.js":"27","D:\\Test\\Pokedex\\pokedex\\src\\Actions\\FavoriteActions.js":"28"},{"size":594,"mtime":1612140998002,"results":"29","hashOfConfig":"30"},{"size":988,"mtime":1612155006643,"results":"31","hashOfConfig":"30"},{"size":4175,"mtime":1612224541845,"results":"32","hashOfConfig":"30"},{"size":852,"mtime":1612225757359,"results":"33","hashOfConfig":"30"},{"size":259,"mtime":1612154314084,"results":"34","hashOfConfig":"30"},{"size":678,"mtime":1612230923921,"results":"35","hashOfConfig":"30"},{"size":610,"mtime":1612154955041,"results":"36","hashOfConfig":"30"},{"size":1985,"mtime":1612215287895,"results":"37","hashOfConfig":"30"},{"size":5607,"mtime":1612152206676,"results":"38","hashOfConfig":"30"},{"size":5026,"mtime":1612205726698,"results":"39","hashOfConfig":"30"},{"size":245,"mtime":1612228014988,"results":"40","hashOfConfig":"30"},{"size":631,"mtime":1612156567323,"results":"41","hashOfConfig":"30"},{"size":158,"mtime":1612227204927,"results":"42","hashOfConfig":"30"},{"size":9594,"mtime":1612144375904,"results":"43","hashOfConfig":"30"},{"size":2365,"mtime":1612156431215,"results":"44","hashOfConfig":"30"},{"size":340,"mtime":1612150361431,"results":"45","hashOfConfig":"30"},{"size":366,"mtime":1612152121907,"results":"46","hashOfConfig":"30"},{"size":242,"mtime":1612152517193,"results":"47","hashOfConfig":"30"},{"size":1121,"mtime":1612156099993,"results":"48","hashOfConfig":"30"},{"size":475,"mtime":1612154491635,"results":"49","hashOfConfig":"30"},{"size":74,"mtime":1612227024530,"results":"50","hashOfConfig":"30"},{"size":549,"mtime":1612154844048,"results":"51","hashOfConfig":"52"},{"size":3808,"mtime":1612226336748,"results":"53","hashOfConfig":"30"},{"size":2491,"mtime":1612226778464,"results":"54","hashOfConfig":"30"},{"size":7779,"mtime":1612228707005,"results":"55","hashOfConfig":"30"},{"size":994,"mtime":1612226976930,"results":"56","hashOfConfig":"30"},{"size":923,"mtime":1612228880377,"results":"57","hashOfConfig":"30"},{"size":197,"mtime":1612227299219,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1yx8l9m",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19dn7ym",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Test\\Pokedex\\pokedex\\src\\index.js",[],["121","122"],"D:\\Test\\Pokedex\\pokedex\\src\\App.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Pages\\Home.js",["123","124","125","126","127"],"import React, { useContext, useEffect, useMemo, useState } from 'react'\r\nimport { AlertContext } from '../Helpers/AlertContext';\r\nimport { Box, Button, CircularProgress, Container, Grid, Icon, IconButton, LinearProgress, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { GetPokemons, GetTypes } from '../Services/Pokedex';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { useHistory } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(2),\r\n        flexDirection: \"row\",\r\n        flex: 1,\r\n        justifyContent: \"center\"\r\n    }\r\n}));\r\nexport const Home = () => {\r\n    const history = useHistory();\r\n    const columns = [ \r\n        { field: \"name\", headerName: \"Nombre\", flex: 0.4 }, \r\n        { field: \"type\", headerName: \"Tipo\", flex: 0.4 }, \r\n        { \r\n            field: \"data\", \r\n            headerName: \"Detalles\", \r\n            renderCell: p => (\r\n                <IconButton \r\n                    onClick={() => \r\n                        history.push({ pathname: `/pokemon/${p.value.name}`})\r\n                    }\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                >\r\n                    <Icon>arrow_forward</Icon>\r\n                </IconButton>\r\n            ),\r\n            flex: 0.2,\r\n            sortable: false,\r\n            filterable: false,\r\n            align: \"right\"\r\n        }\r\n    ];\r\n    const classes = useStyles();\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [type, setType] = useState(null);\r\n    const [types, setTypes] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const alerts = useContext(AlertContext);\r\n    useEffect(() => {\r\n        var isMounted = true;\r\n        const GetData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const resultTypes = types.length > 0? types : await GetTypes();\r\n                if(!isMounted) return;\r\n                setTypes(resultTypes);\r\n                const result = await GetPokemons(resultTypes);\r\n                if(!isMounted) return;\r\n                setPokemons(result.map((p, i) => ({ ...p, id: i, data: p })));\r\n            } catch (e) {\r\n                alerts.setAlert({ code: 0, message: \"Un error ha evitado la carga de los pokemones, por favor espere mientras la pokedex está en el tecnico\"});\r\n            } finally {\r\n                if(isMounted) setLoading(false);\r\n            }\r\n        };\r\n        GetData();\r\n        return () => (isMounted = false);\r\n    }, []);\r\n    const pokemonsShow = useMemo(() => type? pokemons.filter(p => p.type === type) : pokemons, [pokemons, type]);\r\n    return (\r\n        <Grid container className={classes.paper}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={8} md={6} lg={3} xl={2}>\r\n                    <Box ml={2}>\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            size=\"small\"\r\n                            value={type}\r\n                            onChange={(e, v) => setType(v)}\r\n                            options={types.map(t => t.name)}\r\n                            renderInput={(params) => (\r\n                                <TextField {...params} label=\"Tipo\" margin=\"normal\" variant=\"outlined\" />\r\n                            )}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid xs={12} md={10} lg={8} item>\r\n                <Box ml={2}>\r\n                    <div style={{ height: 400, flexGrow: 1 }}>\r\n                        <DataGrid\r\n                            disableSelectionOnClick\r\n                            disableColumnFilter\r\n                            loading={loading}\r\n                            density=\"compact\"\r\n                            autoHeight\r\n                            pageSize={10}\r\n                            columns={columns}\r\n                            rows={pokemonsShow} \r\n                        />\r\n                    </div>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","D:\\Test\\Pokedex\\pokedex\\src\\Helpers\\Theme.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\store.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\aws-exports.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Components\\PrivateRouter.js",["128"],"import { useSelector } from \"react-redux\";\r\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\r\n/**\r\n * @param {RouteProps} param0 \r\n */\r\nexport function PrivateRoute({ children, ...rest }) {\r\n    let user = useSelector(state => state.UserReducer.user);\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          user ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n}","D:\\Test\\Pokedex\\pokedex\\src\\Pages\\Dashboard.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Pages\\SignUp.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Pages\\Login.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Reducers\\index.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Reducers\\UserReducer.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Actions\\ActionsTypes.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Helpers\\Validator.js",["129","130"],"/**\r\n * @param {Number} val\r\n * @param {Number} max\r\n * @param {String} msg\r\n */\r\nexport const Max = (val, max, msg) => {\r\n    if (Number(val))\r\n        return val < max || msg || `El valor debe ser menor a ${max}`;\r\n    else throw new Error(`El valor ${val} no es un numero. En MaxValidator`);\r\n};\r\n/**\r\n * @param {Number} val\r\n * @param {Number} max\r\n * @param {String} msg\r\n */\r\nexport const Min = (val, min, msg) => {\r\n    if (Number(val))\r\n        return val > min || msg || `El valor debe ser mayor a ${min}`;\r\n    else throw new Error(`El valor ${val} no es un numero. En MinValidator`);\r\n};\r\nexport const Range = (val, min, max, msg) =>\r\n    (Max(val, max, msg) === true && Min(val, min, msg) === true) ||\r\n    msg ||\r\n    `El valor debe ser mayor a ${min} y menor a ${max}.`;\r\n/**\r\n * @param {String} val\r\n * @param {String} msg\r\n */\r\nexport const NoSpaces = (val, msg) => {\r\n    if (val && typeof val === \"string\")\r\n        return val.indexOf(\" \") === -1\r\n            ? true\r\n            : msg || \"No se permiten los espacios\";\r\n    else throw new Error(`El valor ${val} no es un String. En NoSpaces`);\r\n};\r\n/**\r\n * @param {String} val;\r\n * @param {Boolean} spaces;\r\n * @param {Boolean} numbers;\r\n */\r\nconst AlphaNumericValidator = (val, spaces, numbers) => {\r\n    if (val && typeof val === \"string\") {\r\n        var regex;\r\n        if (spaces)\r\n            regex = RegExp(numbers ? /^[A-Za-z 0-9]+$/ : /^[A-Za-z ]+$/);\r\n        else if (numbers) regex = RegExp(/^[A-Za-z0-9]+$/);\r\n        else regex = RegExp(/^[A-Za-z]+$/);\r\n        return regex.test(val);\r\n    } else\r\n        throw new Error(\r\n            `El valor ${val} no es un String. En AlphaNumericValidator.`\r\n        );\r\n};\r\n/**\r\n * @param {String} val\r\n * @param {String} msg\r\n */\r\nexport const OnlyAlphabet = (val, msg) =>\r\n    AlphaNumericValidator(val, false, false) ||\r\n    msg ||\r\n    \"Solo se permiten valores con carácteres del alfabeto.\";\r\n/**\r\n * @param {String} val\r\n * @param {String} msg\r\n */\r\nexport const OnlyAlphabetSpaces = (val, msg) =>\r\n    AlphaNumericValidator(val, true, false) ||\r\n    msg ||\r\n    \"Solo se permiten valores con carácteres del alfabeto y espacios.\";\r\n/**\r\n * @param {String} val\r\n * @param {String} msg\r\n */\r\nexport const OnlyAlphaNumeric = (val, msg) =>\r\n    AlphaNumericValidator(val, false, true) ||\r\n    msg ||\r\n    \"Solo se permiten valores alfanumericos(letras y numeros).\";\r\n/**\r\n * @param {String} val\r\n * @param {String} msg\r\n */\r\nexport const OnlyAlphaNumericSpaces = (val, msg) =>\r\n    AlphaNumericValidator(val, true, true) ||\r\n    msg ||\r\n    \"Solo se permiten valores alfanumericos(letras y numeros) y espacios.\";\r\n/**\r\n * @param {String} val\r\n * @param {Number} cant\r\n * @param {String} msg\r\n */\r\nexport const MinRequiredNumbers = (val, cant, msg) => {\r\n    if (val && typeof val === \"string\") {\r\n        let isValid = (val.match(/\\d/g) || []).length >= (cant ?? 1);\r\n        return (\r\n            isValid ||\r\n            msg ||\r\n            `El valor debe contener por lo menos ${cant} numeros.`\r\n        );\r\n    } else\r\n        throw new Error(\r\n            `El valor ${val} no es un String. En MinRequiredNumbers.`\r\n        );\r\n};\r\n/**\r\n * @param {String} val\r\n * @param {Number} length\r\n * @param {Boolean} min\r\n */\r\nconst MaxOrMinLength = (val, length, min) => {\r\n    if (val && typeof val === \"string\")\r\n        return min ? val.length >= length : val.length <= length;\r\n    else throw new Error(`El valor ${val} no es un String. En MaxOrMinLength.`);\r\n};\r\n/**\r\n * @param {String} val\r\n * @param {Number} maxLength\r\n * @param {String} msg\r\n */\r\nexport const MaxLength = (val, maxLength, msg) =>\r\n    MaxOrMinLength(val, maxLength, false) ||\r\n    msg ||\r\n    `El valor debe contener menos de ${maxLength} carácteres.`;\r\n/**\r\n * @param {String} val\r\n * @param {Number} maxLength\r\n * @param {String} msg\r\n */\r\nexport const MinLength = (val, minLength, msg) =>\r\n    MaxOrMinLength(val, minLength, true) ||\r\n    msg ||\r\n    `El valor debe contener mas de ${minLength} carácteres.`;\r\n/**\r\n * @param {String} val\r\n * @param {Number} minLength\r\n * @param {Number} maxLength\r\n * @param {String} msg\r\n */\r\nexport const RangeLength = (val, minLength, maxLength, msg) =>\r\n    (MaxOrMinLength(val, maxLength, false) &&\r\n        MaxOrMinLength(val, minLength, true)) ||\r\n    msg ||\r\n    `El valor debe contener entre ${minLength} y ${maxLength} carácteres.`;\r\n/**\r\n * @param {String} val\r\n * @param {String} msg\r\n */\r\nexport const Email = (val, msg) => {\r\n    if (val && typeof val === \"string\")\r\n        return (\r\n            RegExp(/^((?!\\.)[\\w-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$/).test(\r\n                val\r\n            ) ||\r\n            msg ||\r\n            \"El valor debe ser un correo electrónico válido.\"\r\n        );\r\n    else throw new Error(`El valor ${val} no es un String. En Email.`);\r\n};\r\n/**\r\n * @param {String} val\r\n * @param {String} msg\r\n */\r\nexport const PhoneNumber = (val, msg) => {\r\n    if (val && typeof val === \"string\")\r\n        return (\r\n            RegExp(/^(\\+1 )?8(0|2|4)9(-| )[0-9]{3}(-| )[0-9]{4}$/).test(val) ||\r\n            msg ||\r\n            \"El valor debe ser un numero telefónico válido.\"\r\n        );\r\n    else throw new Error(`El valor ${val} no es un String. En PhoneNumber.`);\r\n};\r\nexport const Url = (val, msg) => {\r\n    if (val && typeof val === \"string\")\r\n        return (\r\n            RegExp(\r\n                /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/gm\r\n            ).test(val) ||\r\n            msg ||\r\n            \"El valor debe ser una url(link) válido.\"\r\n        );\r\n    else throw new Error(`El valor ${val} no es un String. En PhoneNumber.`);\r\n};\r\nexport const allRules = {\r\n    Email,\r\n    RangeLength,\r\n    MinLength,\r\n    MaxLength,\r\n    Min,\r\n    Max,\r\n    MinRequiredNumbers,\r\n    NoSpaces,\r\n    OnlyAlphabet,\r\n    OnlyAlphabetSpaces,\r\n    OnlyAlphaNumeric,\r\n    OnlyAlphaNumericSpaces,\r\n    PhoneNumber,\r\n    Range,\r\n    Url\r\n};\r\nexport const allRulesName = {\r\n    Email: \"Email\",\r\n    RangeLength: \"RangeLength\",\r\n    MinLength: \"MinLength\",\r\n    MaxLength: \"MaxLength\",\r\n    Min: \"Min\",\r\n    Max: \"Max\",\r\n    MinRequiredNumbers: \"MinRequiredNumbers\",\r\n    NoSpaces: \"NoSpaces\",\r\n    OnlyAlphabet: \"OnlyAlphabet\",\r\n    OnlyAlphabetSpaces: \"OnlyAlphabetSpaces\",\r\n    OnlyAlphaNumeric: \"OnlyAlphaNumeric\",\r\n    OnlyAlphaNumericSpaces: \"OnlyAlphaNumericSpaces\",\r\n    PhoneNumber: \"PhoneNumber\",\r\n    Range: \"Range\",\r\n    Url: \"Url\"\r\n};\r\n/**\r\n * @param {Object} values\r\n * @param {Constraint[]} constraints\r\n * @param {Boolean} multipleErrors\r\n */\r\nexport const ValidateAll = (values, constraints, multipleErrors = false) => {\r\n    var errorsMap = {};\r\n    constraints.forEach(c => {\r\n        const val = values[c.name];\r\n        let errors = errorsMap[c.name];\r\n        errors = errors ?? [];\r\n        if (c.isRequired && !val) {\r\n            errors.push(\r\n                new ValidateError(\r\n                    c.name,\r\n                    \"Este campo es obligatorio\",\r\n                    \"Required\"\r\n                )\r\n            );\r\n        } else if (val) {\r\n            const result = Validate(val, c, multipleErrors);\r\n            if (result !== true) {\r\n                errors.push(...result);\r\n            }\r\n        }\r\n        errorsMap[c.name] = errors;\r\n    });\r\n    const errorKeys = Object.keys(errorsMap);\r\n    const noHasError = !errorKeys.some(key => errorsMap[key]?.length);\r\n    return noHasError || errorsMap;\r\n};\r\n/**\r\n * @param {any} val;\r\n * @param {Constraint} constraint;\r\n * @param {Boolean} multipleErrors;\r\n */\r\nexport const Validate = (val, constraint, multipleErrors = false) => {\r\n    /**@type {ValidateError[]} */\r\n    var errors = [];\r\n    if (typeof val === \"undefined\")\r\n        throw Error(\"El parametro val no pude ser undefined. En Validate.\");\r\n    else {\r\n        var hasError = false;\r\n        constraint.rules.forEach(r => {\r\n            if (!multipleErrors && hasError) return;\r\n            const rule = allRules[r.name];\r\n            if (typeof rule === \"undefined\")\r\n                throw Error(`No se encontró la regla ${r.name}. En Validate.`);\r\n            else {\r\n                const result = rule(val, ...r.params, r.message);\r\n                if (result !== true) {\r\n                    hasError = true;\r\n                    errors.push(\r\n                        new ValidateError(constraint.name, result, r.name)\r\n                    );\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return errors.length === 0 || errors;\r\n};\r\nexport class Constraint {\r\n    /** @type {String} */\r\n    name;\r\n    /** @type {Rule[]} */\r\n    rules;\r\n    isRequired;\r\n    /**\r\n     * @param {String} name\r\n     * @param {Rule[]} rules\r\n     */\r\n    constructor(name, rules, isRequired = false) {\r\n        this.name = name;\r\n        this.rules = rules;\r\n        this.isRequired = isRequired;\r\n    }\r\n}\r\nexport class Rule {\r\n    /** @type {String} */\r\n    name;\r\n    /** @type {String} */\r\n    message;\r\n    /** @type {Array} */\r\n    params;\r\n    constructor(name, message, params = []) {\r\n        this.name = name;\r\n        this.message = message;\r\n        this.params = params;\r\n    }\r\n}\r\nexport class ValidateError {\r\n    /** @type {String} */\r\n    name;\r\n    /** @type {String} */\r\n    message;\r\n    /** @type {String} */\r\n    ruleName;\r\n    /**\r\n     * @param {String} name\r\n     * @param {String} message\r\n     * @param {String} ruleName\r\n     */\r\n    constructor(name, message, ruleName) {\r\n        this.name = name;\r\n        this.message = message;\r\n        this.ruleName = ruleName;\r\n    }\r\n}\r\n","D:\\Test\\Pokedex\\pokedex\\src\\Pages\\Confirm.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Components\\Copyright.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Actions\\UserActions.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Helpers\\AlertContext.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Components\\Alerts.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Middlewares\\UserSesionStorage.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Helpers\\lsKeys.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Components\\PublicRouter.js",["131"],"D:\\Test\\Pokedex\\pokedex\\src\\Services\\Pokedex.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Pages\\Pokemon.js",["132","133"],"import { AppBar, Grid, Tabs, Tab, Box, Icon, Paper, Container } from '@material-ui/core'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { Photos } from '../Components/Photos';\r\nimport { PokemonInfo } from '../Components/PokemonInfo';\r\nimport { AlertContext } from '../Helpers/AlertContext';\r\nimport { GetPokemon } from '../Services/Pokedex';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n        {value === index && (\r\n            <Box p={2}>\r\n                <Paper elevation={3}>\r\n                    <Box p={1}>\r\n                        {children}\r\n                    </Box>\r\n                </Paper>\r\n            </Box>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\nexport const Pokemon = () => {\r\n    const [tab, setTab] = useState(0);\r\n    /**@type {import('../Services/Pokedex').FullPokemon} */\r\n    const pType = null;\r\n    const [data, setData] = useState(pType);\r\n    const { name } = useParams();\r\n    const alerts = useContext(AlertContext);\r\n    console.log(data);\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const GetData = async () => {\r\n            try {\r\n                if(name){\r\n                    const result = await GetPokemon(name);\r\n                    if(isMounted) setData(result);\r\n                }\r\n            } catch (e) {\r\n                alerts.setAlert({ message: \"Un error ha impedido que encontremos la informacion\", code: 0 });\r\n            }\r\n        };\r\n        GetData();\r\n        return () => (isMounted = false);\r\n    }, [name]);\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n            <AppBar position=\"static\" color=\"secondary\">\r\n                <Tabs value={tab} onChange={(e, val) => setTab(val)}>\r\n                    <Tab icon={<Icon>article</Icon>} label=\"Información\" id=\"tab-1\"  />\r\n                    <Tab icon={<Icon>insert_photo</Icon>} label=\"Fotos\" id=\"tab-2\"  />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={tab} index={0}>\r\n                <PokemonInfo pokemon={data} />\r\n            </TabPanel>\r\n            <TabPanel value={tab} index={1}>\r\n                <Photos pokemon={data} />\r\n            </TabPanel>\r\n        </Container>\r\n    )\r\n}\r\n","D:\\Test\\Pokedex\\pokedex\\src\\Components\\PokemonInfo.js",["134","135"],"import { Accordion, AccordionDetails, AccordionSummary, Badge, Box, Card, CardContent, CardHeader, CardMedia, Chip, Grid, Hidden, Icon, IconButton, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FavoriteActions } from '../Actions/FavoriteActions';\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlabel: {\r\n        fontWeight: \"900\"\r\n    },\r\n\tdata: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    chip: {\r\n        marginRight: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        fontSize: theme.typography.body1.fontSize,\r\n    },\r\n    stat: {\r\n        color: theme.palette.success.main\r\n    },\r\n    paperDetails: {\r\n        padding: theme.spacing(1)\r\n    },\r\n    summary: {\r\n        backgroundColor: \"#D8D8D8\"\r\n    }\r\n}));\r\n/**\r\n * @typedef {Object} PokemonInfoParams\r\n * @property {import('../Services/Pokedex').FullPokemon} pokemon\r\n */\r\n/**\r\n * @param {PokemonInfoParams} param0 \r\n */\r\nexport const PokemonInfo = ({ pokemon }) => {\r\n    const classes = useStyles();\r\n    const typesText = pokemon?.types?.map(t => t.name)?.join(\", \");\r\n    const user = useSelector(state => state.UserReducer.user);\r\n    const favs = useSelector(state => state.FavoriteReducer.favorites[user.userName]);\r\n    const fav = favs?.find(f => f.id === pokemon?.id) ?? {};\r\n    const color = fav.val? \"#Fc1817\" : \"#A8A8A8\";\r\n    const dispatch = useDispatch();\r\n    const ToggleFav = () => {\r\n        dispatch(FavoriteActions.SetFavorite(user.userName, { id: pokemon.id, val: !fav.val }))\r\n    };\r\n    return (\r\n        <Grid container>\r\n            <Grid container justify=\"center\" direction=\"row\">\r\n                <Typography variant=\"h5\">Carta Pokemon</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n                <Card variant=\"outlined\">\r\n                    <CardHeader\r\n                        title={pokemon?.name}\r\n                        subheader=\"Información Basica\"\r\n                        action={\r\n                            <IconButton onClick={ToggleFav}>\r\n                                <Icon style={{ color }}>favorite</Icon>\r\n                            </IconButton>\r\n                        }\r\n                    />\r\n                    <CardContent>\r\n                        <Grid container direction=\"row\">\r\n                            <Typography variant=\"subtitle2\" className={classes.label}>Id:</Typography>\r\n                            <Typography variant=\"body1\" className={classes.data}>{pokemon?.id}</Typography>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\">\r\n                            <Typography variant=\"subtitle2\" className={classes.label}>Nombre:</Typography>\r\n                            <Typography variant=\"body1\" className={classes.data}>{pokemon?.name}</Typography>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\">\r\n                            <Typography variant=\"subtitle2\" className={classes.label}>Tipos:</Typography>\r\n                            <Typography variant=\"body1\" className={classes.data}>{typesText}</Typography>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\">\r\n                            <Typography variant=\"subtitle2\" className={classes.label}>Peso:</Typography>\r\n                            <Typography variant=\"body1\" className={classes.data}>{pokemon?.weight}</Typography>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\">\r\n                            <Typography variant=\"subtitle2\" className={classes.label}>Altura:</Typography>\r\n                            <Typography variant=\"body1\" className={classes.data}>{pokemon?.height}</Typography>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={false} md={5} />\r\n            <Grid item xs={12} md={3}>\r\n                <Card variant=\"outlined\">\r\n                    <CardMedia title={pokemon?.name} className={classes.media} image={pokemon?.sprites?.front_default} />\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Box mt={3}>\r\n                    <Paper className={classes.paperDetails} elevation={3}>\r\n                        <Grid xs={12} sm={12} md={12}>\r\n                            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                                <AccordionSummary className={classes.summary} title=\"Presiona para mostrar\">\r\n                                    <Typography variant=\"subtitle1\" className={classes.label}>Estadisticas: </Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    {pokemon?.stats?.map((s, i) => (\r\n                                        <Chip\r\n                                            key={`stat-${i}`}\r\n                                            className={classes.chip}\r\n                                            icon={<Typography className={classes.stat} variant=\"body1\">{s.base_stat}</Typography>}\r\n                                            label={s.name}\r\n                                        />\r\n                                    ))}\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                                <AccordionSummary className={classes.summary} title=\"Presiona para mostrar\">\r\n                                    <Typography variant=\"subtitle1\" className={classes.label}>Movimientos: </Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails style={{ flexWrap: \"wrap\" }}>\r\n                                    {pokemon?.moves?.map((m, i) => (\r\n                                        <Chip\r\n                                            key={`move-${i}`}\r\n                                            className={classes.chip}\r\n                                            icon={<Icon color=\"primary\">flash_on</Icon>}\r\n                                            label={m.name}\r\n                                        />\r\n                                    ))}\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                                <AccordionSummary className={classes.summary} title=\"Presiona para mostrar\">\r\n                                    <Typography variant=\"subtitle1\" className={classes.label}>Habilidades: </Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails style={{ flexWrap: \"wrap\" }}>\r\n                                    {pokemon?.abilities?.map((a, i) => (\r\n                                        <Chip\r\n                                            key={`ability-${i}`}\r\n                                            className={classes.chip}\r\n                                            icon={<Icon style={{ color: \"#FFa720\" }}>start</Icon>}\r\n                                            label={a.name}\r\n                                        />\r\n                                    ))}\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        </Grid>                    \r\n                    </Paper>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","D:\\Test\\Pokedex\\pokedex\\src\\Components\\Photos.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Reducers\\FavoriteReducer.js",[],"D:\\Test\\Pokedex\\pokedex\\src\\Actions\\FavoriteActions.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":3,"column":15,"nodeType":"142","messageId":"143","endLine":3,"endColumn":21},{"ruleId":"140","severity":1,"message":"144","line":3,"column":23,"nodeType":"142","messageId":"143","endLine":3,"endColumn":39},{"ruleId":"140","severity":1,"message":"145","line":3,"column":41,"nodeType":"142","messageId":"143","endLine":3,"endColumn":50},{"ruleId":"140","severity":1,"message":"146","line":3,"column":76,"nodeType":"142","messageId":"143","endLine":3,"endColumn":90},{"ruleId":"147","severity":1,"message":"148","line":66,"column":8,"nodeType":"149","endLine":66,"endColumn":10,"suggestions":"150"},{"ruleId":"140","severity":1,"message":"151","line":2,"column":27,"nodeType":"142","messageId":"143","endLine":2,"endColumn":37},{"ruleId":"152","severity":1,"message":"153","line":175,"column":53,"nodeType":"154","messageId":"155","endLine":175,"endColumn":54,"suggestions":"156"},{"ruleId":"152","severity":1,"message":"153","line":175,"column":106,"nodeType":"154","messageId":"155","endLine":175,"endColumn":107,"suggestions":"157"},{"ruleId":"140","severity":1,"message":"151","line":2,"column":27,"nodeType":"142","messageId":"143","endLine":2,"endColumn":37},{"ruleId":"140","severity":1,"message":"158","line":1,"column":18,"nodeType":"142","messageId":"143","endLine":1,"endColumn":22},{"ruleId":"147","severity":1,"message":"159","line":52,"column":8,"nodeType":"149","endLine":52,"endColumn":14,"suggestions":"160"},{"ruleId":"140","severity":1,"message":"161","line":1,"column":57,"nodeType":"142","messageId":"143","endLine":1,"endColumn":62},{"ruleId":"140","severity":1,"message":"162","line":1,"column":123,"nodeType":"142","messageId":"143","endLine":1,"endColumn":129},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'Container' is defined but never used.","'LinearProgress' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'alerts' and 'types'. Either include them or remove the dependency array.","ArrayExpression",["165"],"'RouteProps' is defined but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["166","167"],["168","169"],"'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'alerts'. Either include it or remove the dependency array.",["170"],"'Badge' is defined but never used.","'Hidden' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"messageId":"173","fix":"174","desc":"175"},{"messageId":"176","fix":"177","desc":"178"},{"messageId":"173","fix":"179","desc":"175"},{"messageId":"176","fix":"180","desc":"178"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [alerts, types]",{"range":"183","text":"184"},"removeEscape",{"range":"185","text":"186"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"187","text":"188"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"189","text":"186"},{"range":"190","text":"188"},"Update the dependencies array to be: [alerts, name]",{"range":"191","text":"192"},[2596,2598],"[alerts, types]",[5409,5410],"",[5409,5409],"\\",[5462,5463],[5462,5462],[1812,1818],"[alerts, name]"]